{"uid":"8ad091a1404d897d","name":"Asserting Vehicles prices","fullName":"tests.test_vehicles.TestVehicles#test_vehicle_price","historyId":"fddc9a60a4d57844d3aa342395ae2e1a","time":{"start":1699995166071,"stop":1699995175916,"duration":9845},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Armada link","statusTrace":"self = <tests.test_vehicles.TestVehicles object at 0x7fdb37a99110>\ncar_name = 'Armada', expected_price = '$50,700'\n\n    @allure.title(\"Asserting Vehicles prices\")\n    @pytest.mark.parametrize('car_name, expected_price', test_data)\n    def test_vehicle_price(self, car_name, expected_price):\n        vehicles = VehiclesNav(self.driver)\n        #vehicles.get_button_to_be_clickable().click()\n        # print(f\"Current URL: {self.driver.current_url}\")\n        # vehicles.get_button_vehicles_present().click()\n        # print(f\"Current URL: {self.driver.current_url}\")\n        vehicles.get_button_vehicles_visible().click()\n>       vehicles.get_car_link(car_name).click()\n\ntests/test_vehicles.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npom/vehicles.py:57: in get_car_link\n    return self.is_visible('css', self.car_mapping[car_name]['link_selector'], f'{car_name} link')\nbase/seleniumbase.py:28: in is_visible\n    return self.wait.until(ec.visibility_of_element_located((self.get_selenium_by(find_by), locator)), locator_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2159e4ae-3045-4e2c-809a-8ee19b8d5d92\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fdb3792d6c0>\nmessage = 'Armada link'\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Armada link\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_firefox_options","time":{"start":1699995144517,"stop":1699995144517,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"get_webdriver","time":{"start":1699995144517,"stop":1699995160489,"duration":15972},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1699995160489,"stop":1699995166069,"duration":5580},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"setup::0","time":{"start":1699995176361,"stop":1699995180123,"duration":3762},"status":"passed","steps":[],"attachments":[{"uid":"827a495a8f972be0","name":"Screenshot 2023-11-14 20:52:57.512359","source":"827a495a8f972be0.png","type":"image/png","size":1196839}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"labels":[{"name":"suite","value":"Testing Vehicles parametrize"},{"name":"tag","value":"parallel"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestVehicles"},{"name":"host","value":"fv-az1490-66"},{"name":"thread","value":"2285-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_vehicles"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"car_name","value":"'Armada'"},{"name":"expected_price","value":"'$50,700'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"17c261782b2102c5","reportUrl":"https://Uroboric.github.io/python_automation_lessons/82//#testresult/17c261782b2102c5","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Vehicles button\nStacktrace:\n#0 0x55e243a61fb3 <unknown>\n#1 0x55e2437354a7 <unknown>\n#2 0x55e24377cdd6 <unknown>\n#3 0x55e24377cec1 <unknown>\n#4 0x55e2437ba354 <unknown>\n#5 0x55e24379e96d <unknown>\n#6 0x55e2437b7c02 <unknown>\n#7 0x55e24379e713 <unknown>\n#8 0x55e24377118b <unknown>\n#9 0x55e243771f7e <unknown>\n#10 0x55e243a278d8 <unknown>\n#11 0x55e243a2b800 <unknown>\n#12 0x55e243a35cfc <unknown>\n#13 0x55e243a2c418 <unknown>\n#14 0x55e2439f942f <unknown>\n#15 0x55e243a504e8 <unknown>\n#16 0x55e243a506b4 <unknown>\n#17 0x55e243a61143 <unknown>\n#18 0x7fad06894ac3 <unknown>","time":{"start":1699988656434,"stop":1699988666793,"duration":10359}},{"uid":"e61276ae06ce2163","reportUrl":"https://Uroboric.github.io/python_automation_lessons/81//#testresult/e61276ae06ce2163","status":"broken","statusDetails":"AttributeError: 'VehiclesNav' object has no attribute 'current_url'","time":{"start":1699988456569,"stop":1699988456569,"duration":0}},{"uid":"39e31e108ed9d0f9","reportUrl":"https://Uroboric.github.io/python_automation_lessons/81//#testresult/39e31e108ed9d0f9","status":"broken","statusDetails":"AttributeError: 'VehiclesNav' object has no attribute 'current_url'","time":{"start":1699970770699,"stop":1699970770700,"duration":1}},{"uid":"9624058a1b5fde07","reportUrl":"https://Uroboric.github.io/python_automation_lessons/80//#testresult/9624058a1b5fde07","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5563d687dfb3 <unknown>\n#1 0x5563d65514a7 <unknown>\n#2 0x5563d6584c93 <unknown>\n#3 0x5563d658110c <unknown>\n#4 0x5563d65c3ac6 <unknown>\n#5 0x5563d65ba713 <unknown>\n#6 0x5563d658d18b <unknown>\n#7 0x5563d658df7e <unknown>\n#8 0x5563d68438d8 <unknown>\n#9 0x5563d6847800 <unknown>\n#10 0x5563d6851cfc <unknown>\n#11 0x5563d6848418 <unknown>\n#12 0x5563d681542f <unknown>\n#13 0x5563d686c4e8 <unknown>\n#14 0x5563d686c6b4 <unknown>\n#15 0x5563d687d143 <unknown>\n#16 0x7f1122494ac3 <unknown>","time":{"start":1699970280225,"stop":1699970280225,"duration":0}},{"uid":"7948266a3b9819e6","reportUrl":"https://Uroboric.github.io/python_automation_lessons/79//#testresult/7948266a3b9819e6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Vehicles button\nStacktrace:\n#0 0x55dd5ee3cfb3 <unknown>\n#1 0x55dd5eb104a7 <unknown>\n#2 0x55dd5eb57dd6 <unknown>\n#3 0x55dd5eb57ec1 <unknown>\n#4 0x55dd5eb95354 <unknown>\n#5 0x55dd5eb7996d <unknown>\n#6 0x55dd5eb92c02 <unknown>\n#7 0x55dd5eb79713 <unknown>\n#8 0x55dd5eb4c18b <unknown>\n#9 0x55dd5eb4cf7e <unknown>\n#10 0x55dd5ee028d8 <unknown>\n#11 0x55dd5ee06800 <unknown>\n#12 0x55dd5ee10cfc <unknown>\n#13 0x55dd5ee07418 <unknown>\n#14 0x55dd5edd442f <unknown>\n#15 0x55dd5ee2b4e8 <unknown>\n#16 0x55dd5ee2b6b4 <unknown>\n#17 0x55dd5ee3c143 <unknown>\n#18 0x7fa011494ac3 <unknown>","time":{"start":1699968832696,"stop":1699968839761,"duration":7065}}]},"tags":["parallel","@pytest.mark.usefixtures('setup')"]},"source":"8ad091a1404d897d.json","parameterValues":["'Armada'","'$50,700'"]}