{"uid":"4efdab127fe45b0a","name":"Asserting Vehicles prices","fullName":"tests.test_vehicles.TestVehicles#test_vehicle_price","historyId":"fcaf7ba1fafa29d8ec6acb8eaf0729d9","time":{"start":1699997105768,"stop":1699997121108,"duration":15340},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: Reached error page: about:neterror?e=nssFailure2&u=https%3A//www.nissanusa.com/vehicles/crossovers-suvs/murano.html&c=UTF-8&d=The%20connection%20to%20www.nissanusa.com%20was%20interrupted%20while%20the%20page%20was%20loading.\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:189:5\nUnknownError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:768:5\ncheckReadyState@chrome://remote/content/marionette/navigate.sys.mjs:58:24\nonNavigation@chrome://remote/content/marionette/navigate.sys.mjs:324:39\nemit@resource://gre/modules/EventEmitter.sys.mjs:154:20\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25","statusTrace":"self = <tests.test_vehicles.TestVehicles object at 0x7f87cf769550>\ncar_name = 'Murano', expected_price = '$34,160'\n\n    @allure.title(\"Asserting Vehicles prices\")\n    @pytest.mark.parametrize('car_name, expected_price', test_data)\n    def test_vehicle_price(self, car_name, expected_price):\n        vehicles = VehiclesNav(self.driver)\n        #vehicles.get_button_to_be_clickable().click()\n        # print(f\"Current URL: {self.driver.current_url}\")\n        # vehicles.get_button_vehicles_present().click()\n        # print(f\"Current URL: {self.driver.current_url}\")\n        vehicles.get_button_vehicles_visible().click()\n>       vehicles.get_car_link(car_name).click()\n\ntests/test_vehicles.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f87cf786f10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Reached error page: about:neterror?e=nssFailure....sys.mjs:154:20\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Reached error page: about:neterror?e=nssFailure2&u=https%3A//www.nissanusa.com/vehicles/crossovers-suvs/murano.html&c=UTF-8&d=The%20connection%20to%20www.nissanusa.com%20was%20interrupted%20while%20the%20page%20was%20loading.\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:189:5\nE       UnknownError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:768:5\nE       checkReadyState@chrome://remote/content/marionette/navigate.sys.mjs:58:24\nE       onNavigation@chrome://remote/content/marionette/navigate.sys.mjs:324:39\nE       emit@resource://gre/modules/EventEmitter.sys.mjs:154:20\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\n\n/opt/hostedtoolcache/Python/3.11.6/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_firefox_options","time":{"start":1699997093341,"stop":1699997093341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"get_webdriver","time":{"start":1699997093342,"stop":1699997100965,"duration":7623},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1699997100965,"stop":1699997105767,"duration":4802},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"setup::0","time":{"start":1699997121229,"stop":1699997122034,"duration":805},"status":"passed","steps":[],"attachments":[{"uid":"94e70e96f8689aca","name":"Screenshot 2023-11-14 21:25:21.262875","source":"94e70e96f8689aca.png","type":"image/png","size":56370}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"labels":[{"name":"suite","value":"Testing Vehicles parametrize"},{"name":"tag","value":"parallel"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestVehicles"},{"name":"host","value":"fv-az665-913"},{"name":"thread","value":"2346-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_vehicles"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"car_name","value":"'Murano'"},{"name":"expected_price","value":"'$34,160'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"9ed5e124d32b3784","reportUrl":"https://Uroboric.github.io/python_automation_lessons/85//#testresult/9ed5e124d32b3784","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Murano link","time":{"start":1699996265778,"stop":1699996285722,"duration":19944}},{"uid":"a468ccacdd0b111a","reportUrl":"https://Uroboric.github.io/python_automation_lessons/84//#testresult/a468ccacdd0b111a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Murano link","time":{"start":1699995562941,"stop":1699995580697,"duration":17756}},{"uid":"2b85a45135aa1be1","reportUrl":"https://Uroboric.github.io/python_automation_lessons/83//#testresult/2b85a45135aa1be1","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Murano link","time":{"start":1699995166078,"stop":1699995177032,"duration":10954}},{"uid":"57b0dc0718fe5ef6","reportUrl":"https://Uroboric.github.io/python_automation_lessons/82//#testresult/57b0dc0718fe5ef6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Vehicles button\nStacktrace:\n#0 0x562ba832cfb3 <unknown>\n#1 0x562ba80004a7 <unknown>\n#2 0x562ba8047dd6 <unknown>\n#3 0x562ba8047ec1 <unknown>\n#4 0x562ba8085354 <unknown>\n#5 0x562ba806996d <unknown>\n#6 0x562ba8082c02 <unknown>\n#7 0x562ba8069713 <unknown>\n#8 0x562ba803c18b <unknown>\n#9 0x562ba803cf7e <unknown>\n#10 0x562ba82f28d8 <unknown>\n#11 0x562ba82f6800 <unknown>\n#12 0x562ba8300cfc <unknown>\n#13 0x562ba82f7418 <unknown>\n#14 0x562ba82c442f <unknown>\n#15 0x562ba831b4e8 <unknown>\n#16 0x562ba831b6b4 <unknown>\n#17 0x562ba832c143 <unknown>\n#18 0x7efccee94ac3 <unknown>","time":{"start":1699988656405,"stop":1699988666419,"duration":10014}},{"uid":"55625f699756f3a0","reportUrl":"https://Uroboric.github.io/python_automation_lessons/81//#testresult/55625f699756f3a0","status":"broken","statusDetails":"AttributeError: 'VehiclesNav' object has no attribute 'current_url'","time":{"start":1699988456527,"stop":1699988456527,"duration":0}},{"uid":"f0e684203177e9b8","reportUrl":"https://Uroboric.github.io/python_automation_lessons/81//#testresult/f0e684203177e9b8","status":"broken","statusDetails":"AttributeError: 'VehiclesNav' object has no attribute 'current_url'","time":{"start":1699970770792,"stop":1699970770792,"duration":0}},{"uid":"6bde15ba1c0ddc43","reportUrl":"https://Uroboric.github.io/python_automation_lessons/80//#testresult/6bde15ba1c0ddc43","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5580d8ffcfb3 <unknown>\n#1 0x5580d8cd04a7 <unknown>\n#2 0x5580d8d03c93 <unknown>\n#3 0x5580d8d0010c <unknown>\n#4 0x5580d8d42ac6 <unknown>\n#5 0x5580d8d39713 <unknown>\n#6 0x5580d8d0c18b <unknown>\n#7 0x5580d8d0cf7e <unknown>\n#8 0x5580d8fc28d8 <unknown>\n#9 0x5580d8fc6800 <unknown>\n#10 0x5580d8fd0cfc <unknown>\n#11 0x5580d8fc7418 <unknown>\n#12 0x5580d8f9442f <unknown>\n#13 0x5580d8feb4e8 <unknown>\n#14 0x5580d8feb6b4 <unknown>\n#15 0x5580d8ffc143 <unknown>\n#16 0x7fb7bd094ac3 <unknown>","time":{"start":1699970280222,"stop":1699970280222,"duration":0}},{"uid":"5b95f2c604182f04","reportUrl":"https://Uroboric.github.io/python_automation_lessons/79//#testresult/5b95f2c604182f04","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Vehicles button\nStacktrace:\n#0 0x55d482d6afb3 <unknown>\n#1 0x55d482a3e4a7 <unknown>\n#2 0x55d482a85dd6 <unknown>\n#3 0x55d482a85ec1 <unknown>\n#4 0x55d482ac3354 <unknown>\n#5 0x55d482aa796d <unknown>\n#6 0x55d482ac0c02 <unknown>\n#7 0x55d482aa7713 <unknown>\n#8 0x55d482a7a18b <unknown>\n#9 0x55d482a7af7e <unknown>\n#10 0x55d482d308d8 <unknown>\n#11 0x55d482d34800 <unknown>\n#12 0x55d482d3ecfc <unknown>\n#13 0x55d482d35418 <unknown>\n#14 0x55d482d0242f <unknown>\n#15 0x55d482d594e8 <unknown>\n#16 0x55d482d596b4 <unknown>\n#17 0x55d482d6a143 <unknown>\n#18 0x7f2235e94ac3 <unknown>","time":{"start":1699968832774,"stop":1699968839835,"duration":7061}}]},"tags":["parallel","@pytest.mark.usefixtures('setup')"]},"source":"4efdab127fe45b0a.json","parameterValues":["'Murano'","'$34,160'"]}